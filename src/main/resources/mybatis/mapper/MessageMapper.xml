<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hniu.imchatroom.mapper.MessageMapper">

    <sql id="private_message_column">
        `pr_id`, `send_id`, `receive_id`, `content`, `send_time`
    </sql>
    <sql id="public_message_column">
        `pu_id`, `send_id`, `g_id`, `content`, `send_time`
    </sql>
    <sql id="broadcast_column">
        `b_id`, `u_id`, `content`, `send_time`
    </sql>
    <sql id="article_column">
        `a_id`, `u_id`, `content`, `send_time`
    </sql>

    <resultMap id="PrivateMessageResultMap" type="edu.hniu.imchatroom.model.bean.PrivateMessage">
        <id column="pr_id" property="prId" />
        <result column="content" property="content" />
        <result column="send_time" property="sendTime" />
        <association property="sendUser" column="send_id" select="edu.hniu.imchatroom.mapper.UserMapper.selectUserById" />
        <association property="receiveUser" column="receive_id" select="edu.hniu.imchatroom.mapper.UserMapper.selectUserById" />
    </resultMap>
    <resultMap id="PublicMessageResultMap" type="edu.hniu.imchatroom.model.bean.PublicMessage">
        <id column="pu_id" property="puId" />
        <result column="content" property="content" />
        <result column="send_time" property="sendTime" />
        <association property="sendUser" column="send_id" select="edu.hniu.imchatroom.mapper.UserMapper.selectUserById" />
        <association property="receiveGroup" column="g_id" select="edu.hniu.imchatroom.mapper.GroupMapper.selectGroupById" />
    </resultMap>
    <resultMap id="BroadcastResultMap" type="edu.hniu.imchatroom.model.bean.BroadcastMessage">
        <id column="b_id" property="bId" />
        <result column="content" property="content" />
        <result column="send_time" property="sendTime" />
        <association column="u_id" property="publisher" select="edu.hniu.imchatroom.mapper.UserMapper.selectUserById"/>
    </resultMap>
    <resultMap id="ArticleResultMap" type="edu.hniu.imchatroom.model.bean.ArticleMessage">
        <id column="a_id" property="aId" />
        <result column="content" property="content" />
        <result column="send_time" property="sendTime" />
        <association column="u_id" property="publisher" select="edu.hniu.imchatroom.mapper.UserMapper.selectUserById"/>
    </resultMap>

<!--    List<PrivateMessage> selectPrivateMessages(@Param("privateMessage") PrivateMessage privateMessage);-->
    <select id="selectPrivateMessages" resultMap="PrivateMessageResultMap">
        SELECT
            <include refid="private_message_column" />, `display_status`
        FROM `private_message`
        WHERE `display_status` = '0' AND (
                (`send_id` = #{privateMessage.sendUser.uId } AND `receive_id` = #{privateMessage.receiveUser.uId })
            OR
                (`send_id` = #{privateMessage.receiveUser.uId } AND `receive_id` = #{privateMessage.sendUser.uId })
        )
        ORDER BY `send_time` ASC
    </select>

<!--    List<PublicMessage> selectPublicMessage(@Param("publicMessage") PublicMessage publicMessage);-->
    <select id="selectPublicMessage" resultMap="PublicMessageResultMap">
        SELECT
            <include refid="public_message_column" />, `display_status`
        FROM `public_message`
        WHERE `display_status` = '0' AND `g_id` = #{publicMessage.receiveGroup.gId }
        AND `send_time` > (
            SELECT
                `join_time`
            FROM `group_user`
            WHERE `display_status` = '0'
                AND `member_id` = #{publicMessage.sendUser.uId } AND `g_id` = #{publicMessage.receiveGroup.gId }
            LIMIT 1
        )
        ORDER BY `send_time` ASC
    </select>

<!--    List<BroadcastMessage> selectBroadcastMessage(@Param("broadcastMessage") BroadcastMessage broadcastMessage);-->
    <select id="selectBroadcastMessage" resultMap="BroadcastResultMap">
        SELECT
            <include refid="broadcast_column" />, `display_status`
        FROM `broadcast_message`
        WHERE `display_status` = '0'
        <if test="broadcastMessage.publisher != null">
            AND `u_id` = #{broadcastMessage.publisher.uId }
            AND `send_time` > (
                SELECT
                    `active_time`
                FROM `user`
                WHERE `display_status` = '0' AND `u_id` = #{broadcastMessage.publisher.uId }
            )
        </if>
        ORDER BY `send_time` ASC
    </select>

<!--    List<ArticleMessage> selectArticleMessage(@Param("articleMessage") ArticleMessage articleMessage);-->
    <select id="selectArticleMessage" resultMap="ArticleResultMap">
        SELECT
            <include refid="article_column" />, `display_status`
        FROM `article_message`
        WHERE `display_status` = '0'
        <if test="articleMessage.publisher != null">
            AND `u_id` = #{articleMessage.publisher.uId }
            AND `send_time` > (
                SELECT
                    `active_time`
                FROM `user`
                WHERE `display_status` = '0' AND `u_id` = #{articleMessage.publisher.uId }
            )
        </if>
        ORDER BY `send_time` ASC
    </select>

<!--    Integer insertPriMsg(@Param("privateMessage") PrivateMessage privateMessage);-->
    <insert id="insertPriMsg" useGeneratedKeys="true" keyProperty="prId">
        INSERT INTO `private_message`
            (`send_id`, `receive_id`, `content`, `send_time`)
        VALUES
            (#{privateMessage.sendUser.uId }, #{privateMessage.receiveUser.uId },
             #{privateMessage.content }, #{privateMessage.sendTime })
    </insert>

<!--    Integer insertPubMsg(@Param("publicMessage") PublicMessage publicMessage);-->
    <insert id="insertPubMsg" useGeneratedKeys="true" keyProperty="puId">
        INSERT INTO `public_message`
            (`send_id`, `g_id`, `content`, `send_time`)
        VALUES
            (#{publicMessage.sendUser.uId }, #{publicMessage.receiveGroup.gId },
             #{publicMessage.content }, #{publicMessage.sendTime })
    </insert>

<!--    Integer insertSystemMsg(@Param("broadcastMessage") BroadcastMessage broadcastMessage);-->
    <insert id="insertSystemMsg" useGeneratedKeys="true" keyProperty="bId">
        INSERT INTO `broadcast_message`
            (`u_id`, `content`, `send_time`)
        VALUES
            (#{broadcastMessage.publisher.uId }, #{broadcastMessage.content }, #{broadcastMessage.sendTime })
    </insert>

<!--    Integer insertArticleMsg(@Param("articleMessage") ArticleMessage articleMessage);-->
    <insert id="insertArticleMsg" useGeneratedKeys="true" keyProperty="aId">
        INSERT INTO `article_message`
            (`u_id`, `content`, `send_time`)
        VALUES
            (#{articleMessage.publisher.uId }, #{articleMessage.content }, #{articleMessage.sendTime })
    </insert>

<!--    Integer deletePriMsg(@Param("privateMessages") List<PrivateMessage> privateMessages);-->
    <update id="deletePriMsg">
        <foreach collection="privateMessages" item="msg" separator=";">
            UPDATE `private_message`
            <set>
                `display_status` = '1'
            </set>
            WHERE `pr_id` = #{msg.prId }
        </foreach>
    </update>

<!--    Integer deletePubMsg(@Param("publicMessages") List<PublicMessage> publicMessages);-->
    <update id="deletePubMsg">
        <foreach collection="publicMessages" item="msg" separator=";">
            UPDATE `public_message`
            <set>
                `display_status` = '1'
            </set>
            WHERE `pu_id` = #{msg.puId }
        </foreach>
    </update>

<!--    int deleteBroMsg(@Param("broadcastMessages") List<BroadcastMessage> broadcastMessages);-->
    <update id="deleteBroMsg">
        <foreach collection="broadcastMessages" item="msg" separator=";">
            UPDATE `broadcast_message`
            <set>
                `display_status` = '1'
            </set>
            WHERE `b_id` = #{msg.bId }
        </foreach>
    </update>

<!--    int deleteArtMsg(@Param("articleMessages") List<ArticleMessage> articleMessages);-->
    <update id="deleteArtMsg">
        <foreach collection="articleMessages" item="msg" separator=";">
            UPDATE `article_message`
            <set>
                `display_status` = '1'
            </set>
            WHERE `a_id` = #{msg.aId }
        </foreach>
    </update>
</mapper>