<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hniu.imchatroom.mapper.UserMapper">

<!--    User Table Column's name-->
    <sql id="user_column">
        `u_id`, `account`, `password`, `nickname`, `email`, `role`, `avatar_url`, `online_status`, `account_status`,
            `active_code`, `active_time`, `last_signin_time`, `modified_time`
    </sql>

    <resultMap id="userResultMap" type="edu.hniu.imchatroom.model.bean.User">
        <id column="u_id" property="uId" />
        <result column="account" property="account" />
        <result column="password" property="password" />
        <result column="nickname" property="nickname" />
        <result column="email" property="email" />
        <result column="role" property="role" />
        <result column="avatar_url" property="avatarUrl" />
        <result column="online_status" property="onlineStatus" />
        <result column="account_status" property="accountStatus" />
        <result column="active_code" property="activeCode" />
        <result column="active_time" property="activeTime" />
        <result column="last_signin_time" property="lastSigninTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="display_status" property="displayStatus" />
<!--        好友集合列表，会栈溢出（因为Friend中的FriendShip中嵌套了User对象）-->
<!--        <collection property="myFriendList" column="u_id" select="edu.hniu.imchatroom.mapper.FriendMapper.selectFriendsByUId" />-->
    </resultMap>

<!--    查询所有的User的sql片段-->
    <sql id="AllUsersResult">
        SELECT
            <include refid="user_column" />, `display_status`
        FROM `user`
    </sql>

<!--    List<User> selectAllUsers(@Param("accountStatus") String accountStatus);-->
    <select id="selectAllUsers" resultMap="userResultMap">
        <include refid="AllUsersResult" />
        WHERE `display_status` = '0'
            <if test="accountStatus != null and accountStatus != ''">
                AND `account_status` = #{accountStatus }
            </if>
        ORDER BY `last_signin_time` DESC
    </select>

    <!--    User selectUserById(@Param("uId") Integer uId);-->
    <select id="selectUserById" resultMap="userResultMap">
        <include refid="AllUsersResult" />
        WHERE `display_status` = '0'
            AND `u_id` = #{uId }
    </select>

<!--    User selectUserToVerify(@Param("user") User user, @Param("hasPwd") boolean hasPwd); 可以通过 账户+密码 和 邮箱+密码 两种方式查询用户-->
    <select id="selectUserToVerify" resultMap="userResultMap">
        <include refid="AllUsersResult" />
        WHERE `display_status` = '0' AND
            (`account` = #{user.email } OR
            `email` = #{user.email })
            <if test="hasPwd">
                AND `password` = #{user.password }
            </if>
    </select>

<!--    Integer updateUser(@Param("user") User user);-->
    <update id="updateUser">
        UPDATE `user`
        <trim prefix="SET" suffixOverrides=",">
            <if test="null != user.onlineStatus and '' != user.onlineStatus">
                `online_status` = #{user.onlineStatus },
            </if>
            <if test="null != user.accountStatus and '' != user.accountStatus">
                `account_status` = #{user.accountStatus },
            </if>
            <if test="null != user.lastSigninTime">
                `last_signin_time` = #{user.lastSigninTime },
            </if>
            <if test="null != user.modifiedTime">
                `modified_time` = #{user.modifiedTime }
            </if>
        </trim>
        WHERE `display_status` = '0' AND `u_id` = #{user.uId }
    </update>

<!--    Integer insertUser(@Param("user") User user);-->
    <insert id="insertUser">
        INSERT INTO `user`
            (`account`, `password`, `nickname`, `email`, `active_code`, `modified_time`)
        VALUES
            (#{user.account }, #{user.password }, #{user.nickname }, #{user.email }, #{user.activeCode}, #{user.modifiedTime })
    </insert>

<!--    Integer activeUserAccount(@Param("activeUser") User activeUser);-->
    <update id="activeUserAccount">
        UPDATE `user`
        SET
            `account_status` = #{activeUser.accountStatus },
            `active_time` = #{activeUser.activeTime },
            `modified_time` = #{activeUser.modifiedTime }
        WHERE `display_status` = '0' AND `active_code` = #{activeUser.activeCode }
    </update>

<!--    List<User> selectUsersByFuzzyQuery(@Param("data") String data);-->
    <select id="selectUsersByFuzzyQuery" resultMap="userResultMap">
        <include refid="AllUsersResult" />
        WHERE `display_status` = '0'
        AND (`account` LIKE CONCAT('%', #{data }, '%') OR
            `email` LIKE CONCAT('%', #{data }, '%') OR
            `nickname` LIKE CONCAT('%', #{data }, '%'))
            ORDER BY `active_time` DESC
    </select>
</mapper>